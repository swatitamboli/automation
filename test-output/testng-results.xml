<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="12" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-13T14:17:03 IST" name="Suite" finished-at="2022-09-13T14:22:10 IST" duration-ms="307655">
    <groups>
    </groups>
    <test started-at="2022-09-13T14:17:03 IST" name="Test" finished-at="2022-09-13T14:22:10 IST" duration-ms="307655">
      <class name="tests.TimePageTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TimePageTest@66498326]" started-at="2022-09-13T14:20:53 IST" name="beforeMethod" finished-at="2022-09-13T14:21:26 IST" duration-ms="32245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyEmployeeName()[pri:0, instance:tests.TimePageTest@66498326]" started-at="2022-09-13T14:21:26 IST" name="verifyEmployeeName" finished-at="2022-09-13T14:21:33 IST" duration-ms="7567" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmployeeName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.TimePageTest@66498326]" started-at="2022-09-13T14:21:33 IST" name="afterMethod" finished-at="2022-09-13T14:21:34 IST" duration-ms="219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmployeeName status=SUCCESS method=TimePageTest.verifyEmployeeName()[pri:0, instance:tests.TimePageTest@66498326] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.TimePageTest -->
      <class name="tests.HomePageTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.HomePageTest@120f102b]" started-at="2022-09-13T14:17:03 IST" name="setup" finished-at="2022-09-13T14:17:03 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.HomePageTest@120f102b]" started-at="2022-09-13T14:17:03 IST" name="beforeMethod" finished-at="2022-09-13T14:17:20 IST" duration-ms="17651" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyMenuItems()[pri:0, instance:tests.HomePageTest@120f102b]" started-at="2022-09-13T14:17:20 IST" name="verifyMenuItems" finished-at="2022-09-13T14:17:30 IST" duration-ms="9375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMenuItems -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.HomePageTest@120f102b]" started-at="2022-09-13T14:17:30 IST" name="afterMethod" finished-at="2022-09-13T14:17:30 IST" duration-ms="316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyMenuItems status=SUCCESS method=HomePageTest.verifyMenuItems()[pri:0, instance:tests.HomePageTest@120f102b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.HomePageTest@120f102b]" started-at="2022-09-13T14:17:30 IST" name="beforeMethod" finished-at="2022-09-13T14:18:05 IST" duration-ms="34538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserName()[pri:0, instance:tests.HomePageTest@120f102b]" started-at="2022-09-13T14:18:05 IST" name="verifyUserName" finished-at="2022-09-13T14:18:10 IST" duration-ms="5291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.HomePageTest@120f102b]" started-at="2022-09-13T14:18:10 IST" name="afterMethod" finished-at="2022-09-13T14:18:11 IST" duration-ms="1185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserName status=SUCCESS method=HomePageTest.verifyUserName()[pri:0, instance:tests.HomePageTest@120f102b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.HomePageTest -->
      <class name="tests.AdminPageTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.AdminPageTest@51dcb805]" started-at="2022-09-13T14:19:49 IST" name="beforeMethod" finished-at="2022-09-13T14:20:09 IST" duration-ms="19592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isSearchButtonPresent()[pri:0, instance:tests.AdminPageTest@51dcb805]" started-at="2022-09-13T14:20:09 IST" name="isSearchButtonPresent" finished-at="2022-09-13T14:20:16 IST" duration-ms="7409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSearchButtonPresent -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.AdminPageTest@51dcb805]" started-at="2022-09-13T14:20:16 IST" name="afterMethod" finished-at="2022-09-13T14:20:16 IST" duration-ms="240" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isSearchButtonPresent status=SUCCESS method=AdminPageTest.isSearchButtonPresent()[pri:0, instance:tests.AdminPageTest@51dcb805] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.AdminPageTest@51dcb805]" started-at="2022-09-13T14:20:16 IST" name="beforeMethod" finished-at="2022-09-13T14:20:43 IST" duration-ms="26474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUsername()[pri:0, instance:tests.AdminPageTest@51dcb805]" started-at="2022-09-13T14:20:43 IST" name="verifyUsername" finished-at="2022-09-13T14:20:53 IST" duration-ms="10373" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"/label[text()='Username']/following::input"}
  (Session info: chrome=105.0.5195.102)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-GBGGO5N', ip: '192.168.43.14', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.102, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\Shree\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:54596}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 119b60a35f0968ae29ea5ad3a9977b4c
*** Element info: {Using=xpath, value=/label[text()='Username']/following::input}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"/label[text()='Username']/following::input"}
  (Session info: chrome=105.0.5195.102)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-GBGGO5N', ip: '192.168.43.14', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.102, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\Shree\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:54596}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 119b60a35f0968ae29ea5ad3a9977b4c
*** Element info: {Using=xpath, value=/label[text()='Username']/following::input}
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy13.sendKeys(Unknown Source)
at pages.AdminPage.getUsername(AdminPage.java:24)
at tests.AdminPageTest.verifyUsername(AdminPageTest.java:16)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUsername -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.AdminPageTest@51dcb805]" started-at="2022-09-13T14:20:53 IST" name="afterMethod" finished-at="2022-09-13T14:20:53 IST" duration-ms="440" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUsername status=FAILURE method=AdminPageTest.verifyUsername()[pri:0, instance:tests.AdminPageTest@51dcb805] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.AdminPageTest -->
      <class name="tests.DashboradPageTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.DashboradPageTest@cad498c]" started-at="2022-09-13T14:21:34 IST" name="beforeMethod" finished-at="2022-09-13T14:21:59 IST" duration-ms="25762" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isDashboardPresent()[pri:0, instance:tests.DashboradPageTest@cad498c]" started-at="2022-09-13T14:21:59 IST" name="isDashboardPresent" finished-at="2022-09-13T14:22:09 IST" duration-ms="9869" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isDashboardPresent -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.DashboradPageTest@cad498c]" started-at="2022-09-13T14:22:09 IST" name="afterMethod" finished-at="2022-09-13T14:22:10 IST" duration-ms="1214" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isDashboardPresent status=SUCCESS method=DashboradPageTest.isDashboardPresent()[pri:0, instance:tests.DashboradPageTest@cad498c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.DashboradPageTest -->
      <class name="tests.LeavePageTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.LeavePageTest@625732]" started-at="2022-09-13T14:18:11 IST" name="beforeMethod" finished-at="2022-09-13T14:18:42 IST" duration-ms="30551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isResetButtonPreset()[pri:0, instance:tests.LeavePageTest@625732]" started-at="2022-09-13T14:18:42 IST" name="isResetButtonPreset" finished-at="2022-09-13T14:18:52 IST" duration-ms="10068" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isResetButtonPreset -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LeavePageTest@625732]" started-at="2022-09-13T14:18:52 IST" name="afterMethod" finished-at="2022-09-13T14:18:53 IST" duration-ms="1206" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isResetButtonPreset status=SUCCESS method=LeavePageTest.isResetButtonPreset()[pri:0, instance:tests.LeavePageTest@625732] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.LeavePageTest@625732]" started-at="2022-09-13T14:18:53 IST" name="beforeMethod" finished-at="2022-09-13T14:19:42 IST" duration-ms="49147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isSearchButtonPreset()[pri:0, instance:tests.LeavePageTest@625732]" started-at="2022-09-13T14:19:42 IST" name="isSearchButtonPreset" finished-at="2022-09-13T14:19:49 IST" duration-ms="6486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isSearchButtonPreset -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.LeavePageTest@625732]" started-at="2022-09-13T14:19:49 IST" name="afterMethod" finished-at="2022-09-13T14:19:49 IST" duration-ms="299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isSearchButtonPreset status=SUCCESS method=LeavePageTest.isSearchButtonPreset()[pri:0, instance:tests.LeavePageTest@625732] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.LeavePageTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
